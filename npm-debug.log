0 info it worked if it ends with ok
1 verbose cli [ 'D:\\Ashwin\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'D:\\Ashwin\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@2.7.4
3 info using node@v0.12.2
4 verbose node symlink D:\Ashwin\Program Files\nodejs\\node.exe
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: 'C:\\Users\\Ashwin\\Dropbox\\GitHub\\node-github',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package.tgz not in flight; packing
10 verbose tar pack [ 'C:\\Users\\Ashwin\\AppData\\Roaming\\npm-cache\\node-github\\0.2.5\\package.tgz',
10 verbose tar pack   'C:\\Users\\Ashwin\\Dropbox\\GitHub\\node-github' ]
11 verbose tarball C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package.tgz
12 verbose folder C:\Users\Ashwin\Dropbox\GitHub\node-github
13 info prepublish node-github@0.2.5
14 verbose addLocalTarball adding from inside cache C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package.tgz
15 silly cache afterAdd node-github@0.2.5
16 verbose afterAdd C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package\package.json not in flight; writing
17 verbose afterAdd C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package\package.json written
18 silly publish { name: 'node-github',
18 silly publish   version: '0.2.5',
18 silly publish   description: 'NodeJS wrapper for the GitHub API (Forked from https://www.npmjs.com/package/node-github)',
18 silly publish   author: { name: 'Ashwin', email: 'ak@stackexpert.com' },
18 silly publish   contributors: [ { name: 'Ashwin', email: 'ak@stackexpert.com' } ],
18 silly publish   homepage: 'https://github.com/stackexpert/node-github',
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git://github.com/stackexpert/node-github.git' },
18 silly publish   engine: { node: '>=0.4.0' },
18 silly publish   dependencies: { mime: '^1.2.11' },
18 silly publish   devDependencies:
18 silly publish    { async: '^0.9.0',
18 silly publish      oauth: '~0.9.7',
18 silly publish      optimist: '~0.6.0',
18 silly publish      mocha: '~1.13.0' },
18 silly publish   main: '.',
18 silly publish   scripts: { test: 'node ./test/all.js' },
18 silly publish   licenses:
18 silly publish    [ { type: 'The MIT License',
18 silly publish        url: 'http://www.opensource.org/licenses/mit-license.php' } ],
18 silly publish   readme: '# JavaScript GitHub API for Node.JS\r\n\r\nA Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.\r\n\r\n## Installation\r\n\r\n  Install with the Node.JS package manager [npm](http://npmjs.org/) ![NPM version](https://badge.fury.io/js/github.svg):\r\n\r\n      $ npm install node-github\r\n\r\nor\r\n\r\n  Install via git clone:\r\n\r\n      $ git clone git://github.com/stackexpert/node-github.git\r\n      $ cd node-github\r\n      $ npm install\r\n\r\n## Documentation\r\n\r\nYou can find the docs for the API of this client at [http://mikedeboer.github.com/node-github/](http://mikedeboer.github.com/node-github/)\r\n\r\nAdditionally, the [official Github documentation](https://developer.github.com/v3/)\r\nis a very useful resource.\r\n\r\n## Example\r\n\r\nPrint all followers of the user "mikedeboer" to the console.\r\n```javascript\r\nvar GitHubApi = require("github");\r\n\r\nvar github = new GitHubApi({\r\n    // required\r\n    version: "3.0.0",\r\n    // optional\r\n    debug: true,\r\n    protocol: "https",\r\n    host: "github.my-GHE-enabled-company.com", // should be api.github.com for GitHub\r\n    pathPrefix: "/api/v3", // for some GHEs; none for GitHub\r\n    timeout: 5000,\r\n    headers: {\r\n        "user-agent": "My-Cool-GitHub-App" // GitHub is happy with a unique user agent\r\n    }\r\n});\r\ngithub.user.getFollowingFromUser({\r\n    // optional:\r\n    // headers: {\r\n    //     "cookie": "blahblah"\r\n    // },\r\n    user: "mikedeboer"\r\n}, function(err, res) {\r\n    console.log(JSON.stringify(res));\r\n});\r\n```\r\n\r\nFirst the _GitHubApi_ class is imported from the _node-github_ module. This class provides\r\naccess to all of GitHub\'s APIs (e.g. user, issues or repo APIs). The _getFollowingFromUser_\r\nmethod lists all followers of a given GitHub user. Is is part of the user API. It\r\ntakes the user name as first argument and a callback as last argument. Once the\r\nfollower list is returned from the server, the callback is called.\r\n\r\nLike in Node.JS, callbacks are always the last argument. If the functions fails an\r\nerror object is passed as first argument to the callback.\r\n\r\n## Authentication\r\n\r\nMost GitHub API calls don\'t require authentication. As a rule of thumb: If you\r\ncan see the information by visiting the site without being logged in, you don\'t\r\nhave to be authenticated to retrieve the same information through the API. Of\r\ncourse calls, which change data or read sensitive information have to be authenticated.\r\n\r\nYou need the GitHub user name and the API key for authentication. The API key can\r\nbe found in the user\'s _Account Settings_ page.\r\n\r\nThis example shows how to authenticate and then change _location_ field of the\r\naccount settings to _Argentina_:\r\n```javascript\r\ngithub.authenticate({\r\n    type: "basic",\r\n    username: username,\r\n    password: password\r\n});\r\ngithub.user.update({\r\n    location: "Argentina"\r\n}, function(err) {\r\n    console.log("done!");\r\n});\r\n```\r\nNote that the _authenticate_ method is synchronous because it only stores the\r\ncredentials for the next request.\r\n\r\nOther examples for the various authentication methods:\r\n```javascript\r\n// OAuth2\r\ngithub.authenticate({\r\n    type: "oauth",\r\n    token: token\r\n});\r\n\r\n// OAuth2 Key/Secret\r\ngithub.authenticate({\r\n    type: "oauth",\r\n    key: "clientID",\r\n    secret: "clientSecret"\r\n})\r\n\r\n// Deprecated Gihub API token (seems not to be working with the v3 API)\r\ngithub.authenticate({\r\n    type: "token",\r\n    token: token\r\n});\r\n```\r\n\r\n### Creating tokens for your application\r\n[Create a new authorization](http://developer.github.com/v3/oauth/#create-a-new-authorization) for your application giving it access to the wanted scopes you need instead of relying on username / password and is the way to go if you have [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) on.\r\n\r\nFor example:\r\n\r\n1. Use github.authenticate() to auth with GitHub using your username / password\r\n2. Create an application token programmatically with the scopes you need and, if you use two-factor authentication send the `X-GitHub-OTP` header with the one-time-password you get on your token device.\r\n\r\n```javascript\r\ngithub.authorization.create({\r\n    scopes: ["user", "public_repo", "repo", "repo:status", "gist"],\r\n    note: "what this auth is for",\r\n    note_url: "http://url-to-this-auth-app",\r\n    headers: {\r\n        "X-GitHub-OTP": "two-factor-code"\r\n    }\r\n}, function(err, res) {\r\n    if (res.token) {\r\n        //save and use res.token as in the Oauth process above from now on\r\n    }\r\n});\r\n```\r\n\r\n## Implemented GitHub APIs\r\n\r\n* Gists: 100%\r\n* Git Data: 100%\r\n* Issues: 100%\r\n* Orgs: 100%\r\n* Pull Requests: 100%\r\n* Repos: 100%\r\n* Users: 100%\r\n* Events: 100%\r\n* Search: 100%\r\n* Markdown: 100%\r\n* Rate Limit: 100%\r\n* Releases: 100%\r\n* Gitignore: 100%\r\n* Meta: 100%\r\n* Emojis: 100%\r\n\r\n## Running the Tests\r\n\r\nThe unit tests are based on the [mocha](http://visionmedia.github.com/mocha/)\r\nmodule, which may be installed via npm. To run the tests make sure that the\r\nnpm dependencies are installed by running `npm install` from the project directory.\r\n\r\nBefore running unit tests:\r\n```shell\r\nnpm install mocha -g\r\n```\r\nAt the moment, test classes can only be run separately. This will e.g. run the Issues Api test:\r\n```shell\r\nmocha api/v3.0.0/issuesTest.js\r\n```\r\nNote that a connection to the internet is required to run the tests.\r\n\r\n## LICENSE\r\n\r\nMIT license. See the LICENSE file for details.\r\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '01107c166753beb6ef53c5619826b0aef4e55063',
18 silly publish   bugs: { url: 'https://github.com/stackexpert/node-github/issues' },
18 silly publish   _id: 'node-github@0.2.5',
18 silly publish   _shasum: 'caad45e326a5b803d1089eb0a07ead3f46015905',
18 silly publish   _from: '.' }
19 silly mapToRegistry name node-github
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/node-github
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading C:\Users\Ashwin\AppData\Roaming\npm-cache\node-github\0.2.5\package.tgz
25 verbose request uri https://registry.npmjs.org/node-github
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 6:50:07 PM
28 verbose request using bearer token for auth
29 verbose request id 5ef405a46511b4f6
30 http request PUT https://registry.npmjs.org/node-github
31 http 404 https://registry.npmjs.org/node-github
32 verbose headers { date: 'Fri, 24 Apr 2015 13:20:09 GMT',
32 verbose headers   server: 'Apache',
32 verbose headers   'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=0',
32 verbose headers   'content-length': '21',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   'x-served-by': 'cache-sn86-SIN',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1429881607.719359,VS0,VE2146',
32 verbose headers   'keep-alive': 'timeout=10, max=50',
32 verbose headers   connection: 'Keep-Alive' }
33 verbose request invalidating C:\Users\Ashwin\AppData\Roaming\npm-cache\registry.npmjs.org\node-github on PUT
34 error publish Failed PUT 404
35 verbose stack Error: Not found : node-github
35 verbose stack     at CachingRegistryClient.<anonymous> (D:\Ashwin\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:247:14)
35 verbose stack     at Request._callback (D:\Ashwin\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:170:14)
35 verbose stack     at Request.self.callback (D:\Ashwin\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:344:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (D:\Ashwin\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1239:14)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (D:\Ashwin\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1187:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
35 verbose stack     at process._tickCallback (node.js:355:11)
36 verbose statusCode 404
37 verbose pkgid node-github
38 verbose cwd C:\Users\Ashwin\Dropbox\GitHub\node-github
39 error Windows_NT 6.1.7601
40 error argv "D:\\Ashwin\\Program Files\\nodejs\\\\node.exe" "D:\\Ashwin\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
41 error node v0.12.2
42 error npm  v2.7.4
43 error code E404
44 error 404 Not found : node-github
44 error 404
44 error 404 'node-github' is not in the npm registry.
44 error 404 You should bug the author to publish it (or use the name yourself!)
44 error 404
44 error 404 Note that you can also install from a
44 error 404 tarball, folder, http url, or git url.
45 verbose exit [ 1, true ]
